"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Tutorial Intro","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Tutorial - Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a Page","href":"/docs/tutorial-basics/create-a-page","docId":"tutorial-basics/create-a-page","unlisted":false},{"type":"link","label":"Create a Document","href":"/docs/tutorial-basics/create-a-document","docId":"tutorial-basics/create-a-document","unlisted":false},{"type":"link","label":"Create a Blog Post","href":"/docs/tutorial-basics/create-a-blog-post","docId":"tutorial-basics/create-a-blog-post","unlisted":false},{"type":"link","label":"Markdown Features","href":"/docs/tutorial-basics/markdown-features","docId":"tutorial-basics/markdown-features","unlisted":false},{"type":"link","label":"Deploy your site","href":"/docs/tutorial-basics/deploy-your-site","docId":"tutorial-basics/deploy-your-site","unlisted":false},{"type":"link","label":"Congratulations!","href":"/docs/tutorial-basics/congratulations","docId":"tutorial-basics/congratulations","unlisted":false}],"href":"/docs/category/tutorial---basics"},{"type":"category","label":"Tutorial - Extras","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Manage Docs Versions","href":"/docs/tutorial-extras/manage-docs-versions","docId":"tutorial-extras/manage-docs-versions","unlisted":false},{"type":"link","label":"Translate your site","href":"/docs/tutorial-extras/translate-your-site","docId":"tutorial-extras/translate-your-site","unlisted":false}],"href":"/docs/category/tutorial---extras"},{"type":"category","label":"getting-started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Vovk Client","href":"/docs/getting-started/client","docId":"getting-started/client","unlisted":false},{"type":"link","label":"Custom Decorators","href":"/docs/getting-started/decorators","docId":"getting-started/decorators","unlisted":false},{"type":"link","label":"Getting started","href":"/docs/getting-started/install","docId":"getting-started/install","unlisted":false},{"type":"link","label":"Overview","href":"/docs/getting-started/overview","docId":"getting-started/overview","unlisted":false},{"type":"link","label":"Roadmap","href":"/docs/getting-started/roadmap","docId":"getting-started/roadmap","unlisted":false},{"type":"link","label":"Sponsor","href":"/docs/getting-started/sponsor","docId":"getting-started/sponsor","unlisted":false},{"type":"link","label":"Streaming","href":"/docs/getting-started/streaming","docId":"getting-started/streaming","unlisted":false},{"type":"link","label":"Request validation","href":"/docs/getting-started/validation","docId":"getting-started/validation","unlisted":false},{"type":"link","label":"The Vovk Pattern","href":"/docs/getting-started/vovk-pattern","docId":"getting-started/vovk-pattern","unlisted":false},{"type":"link","label":"Vovk Worker Service","href":"/docs/getting-started/worker","docId":"getting-started/worker","unlisted":false}]}]},"docs":{"getting-started/client":{"id":"getting-started/client","title":"Vovk Client","description":"vovk/client module exports utilities that turn controllers in a well-typed TypeScript library. It recognises types imported with import type from controllers.","sidebar":"tutorialSidebar"},"getting-started/decorators":{"id":"getting-started/decorators","title":"Custom Decorators","description":"createDecorator is a higher-order function that produces a decorator factory (a function that returns a decorator). It accepts a middleware function with the following parameters:","sidebar":"tutorialSidebar"},"getting-started/install":{"id":"getting-started/install","title":"Getting started","description":"Quick install","sidebar":"tutorialSidebar"},"getting-started/overview":{"id":"getting-started/overview","title":"Overview","description":"\x3c!--","sidebar":"tutorialSidebar"},"getting-started/roadmap":{"id":"getting-started/roadmap","title":"Roadmap","description":"Framework","sidebar":"tutorialSidebar"},"getting-started/sponsor":{"id":"getting-started/sponsor","title":"Sponsor","description":"","sidebar":"tutorialSidebar"},"getting-started/streaming":{"id":"getting-started/streaming","title":"Streaming","description":"Besides regular HTTP requests Vovk.ts supports event streaming that especially useful with the modern AI APIs. To implement response streming the API route function can return","sidebar":"tutorialSidebar"},"getting-started/validation":{"id":"getting-started/validation","title":"Request validation","description":"Vovk.ts offers API that allows to validate request body and query string on back-end and, thanks to the metadata mechanism, performs zero-cost validation on client-side before request to the server is even made.","sidebar":"tutorialSidebar"},"getting-started/vovk-pattern":{"id":"getting-started/vovk-pattern","title":"The Vovk Pattern","description":"Vovk.ts combines back-end and front-end code into one code base. The logical parts of the app are split into folders given them corresponding name. The folders are split into \\"things\\" such as user, post, comment, app settings, auth features etc. Besically \\"a thing\\" can belong to 2 categories:","sidebar":"tutorialSidebar"},"getting-started/worker":{"id":"getting-started/worker","title":"Vovk Worker Service","description":"vovk/worker module is intended to popularise Web Worker usage in your every day work. The standard Web Workers are awesome but they require to write additional code by using onmessage handler on both sides (main thread and Woker thread) and exchange data using postMessage. Vovk Worker Service applies the same principle that is used at clientizeController and builds main-thread client-side library using metadata and worker type. It uses built-in browser API aush as addEventListener and postMessage and does not call eval or Function constructor.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes.","sidebar":"tutorialSidebar"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template.","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed...","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:","sidebar":"tutorialSidebar"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:","sidebar":"tutorialSidebar"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack).","sidebar":"tutorialSidebar"},"tutorial-basics/markdown-features":{"id":"tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features.","sidebar":"tutorialSidebar"},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs.","sidebar":"tutorialSidebar"},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French.","sidebar":"tutorialSidebar"}}}')}}]);