"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"About","href":"/docs/about","docId":"about","unlisted":false},{"type":"link","label":"Getting Started","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Controller Class","href":"/docs/controller","docId":"controller","unlisted":false},{"type":"link","label":"Worker Service Class","href":"/docs/worker","docId":"worker","unlisted":false},{"type":"link","label":"Decorators for Controller Methods","href":"/docs/decorators","docId":"decorators","unlisted":false},{"type":"link","label":"Project Structure","href":"/docs/project-structure","docId":"project-structure","unlisted":false},{"type":"link","label":"API","href":"/docs/api","docId":"api","unlisted":false},{"type":"link","label":"CLI","href":"/docs/cli","docId":"cli","unlisted":false},{"type":"link","label":"Customization & Configuration","href":"/docs/customization","docId":"customization","unlisted":false},{"type":"link","label":"How it Works","href":"/docs/how-it-works","docId":"how-it-works","unlisted":false},{"type":"link","label":"Roadmap & Changelog","href":"/docs/roadmap","docId":"roadmap","unlisted":false},{"type":"link","label":"Sponsor","href":"/docs/sponsor","docId":"sponsor","unlisted":false}]},"docs":{"about":{"id":"about","title":"About","description":"Motivation","sidebar":"tutorialSidebar"},"api":{"id":"api","title":"API","description":"Full list of available imports for quick reference:","sidebar":"tutorialSidebar"},"cli":{"id":"cli","title":"CLI","description":"vovk dev","sidebar":"tutorialSidebar"},"controller":{"id":"controller","title":"Controller Class","description":"Controller definition","sidebar":"tutorialSidebar"},"customization":{"id":"customization","title":"Customization & Configuration","description":"vovk.config.js","sidebar":"tutorialSidebar"},"decorators":{"id":"decorators","title":"Decorators for Controller Methods","description":"Overview","sidebar":"tutorialSidebar"},"how-it-works":{"id":"how-it-works","title":"How it Works","description":"1. vovk dev finds the closest available port to run Next.js server by itself. This is an important step that allows Vovk Metadata Server to know the process.env.PORT and Next.js dev server to know  process.env.VOVK_PORT. This is the only purpose of this wrapper around the standard next dev command.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Getting Started","description":"Quick install","sidebar":"tutorialSidebar"},"project-structure":{"id":"project-structure","title":"Project Structure","description":"This page explains how you could structure an application introducing a framework that you can optionally apply to a large project that uses Vovk.ts.","sidebar":"tutorialSidebar"},"roadmap":{"id":"roadmap","title":"Roadmap & Changelog","description":"Roadmap","sidebar":"tutorialSidebar"},"sponsor":{"id":"sponsor","title":"Sponsor","description":"Sponsor the author of the project on Github \u2665\ufe0f","sidebar":"tutorialSidebar"},"worker":{"id":"worker","title":"Worker Service Class","description":"Web Worker features provided by Vovk.ts is intended to popularise threading in browser. The standard Web Workers are awesome but they require to write additional logic by using onmessage handler on both sides (main thread and the Woker thread) and exchange data using postMessage. Vovk.ts applies the same principle that is used at controllers and builds main-thread client-side library using the auto-generated .vovk.json. It uses built-in browser API aush as addEventListener and postMessage and does not utilise eval function or Function constructor.","sidebar":"tutorialSidebar"}}}')}}]);