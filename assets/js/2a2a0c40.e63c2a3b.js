"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3697],{2324:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var s=n(5893),r=n(1151);const o={},l="Getting started",a={id:"getting-started/install",title:"Getting started",description:"Quick install",source:"@site/docs/getting-started/install.md",sourceDirName:"getting-started",slug:"/getting-started/install",permalink:"/docs/getting-started/install",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/install.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Custom Decorators",permalink:"/docs/getting-started/decorators"},next:{title:"Overview",permalink:"/docs/getting-started/overview"}},i={},c=[{value:"Quick install",id:"quick-install",level:2},{value:"Manual install",id:"manual-install",level:2},{value:"1. Create Next.js APP",id:"1-create-nextjs-app",level:3},{value:"2. Enable decorators",id:"2-enable-decorators",level:3},{value:"3. Set up Next.js wildcard route handler",id:"3-set-up-nextjs-wildcard-route-handler",level:3},{value:"4. Create first service and controller",id:"4-create-first-service-and-controller",level:3},{value:"5. Set up application state and clientize the controller",id:"5-set-up-application-state-and-clientize-the-controller",level:3},{value:"6. Make the first request from page.tsx",id:"6-make-the-first-request-from-pagetsx",level:3},{value:"Next steps",id:"next-steps",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"getting-started",children:"Getting started"}),"\n",(0,s.jsx)(t.h2,{id:"quick-install",children:"Quick install"}),"\n",(0,s.jsxs)(t.p,{children:["Setup Vovk.ts with ",(0,s.jsx)(t.a,{href:"https://www.npmjs.com/package/create-next-app",children:"create-next-app"})]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"npx create-next-app -e https://github.com/finom/vovk-hello-world\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Inside the project folder run ",(0,s.jsx)(t.code,{children:"npm run dev"})," and open ",(0,s.jsx)(t.a,{href:"http://localhost:3000",children:"http://localhost:3000"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"manual-install",children:"Manual install"}),"\n",(0,s.jsx)(t.h3,{id:"1-create-nextjs-app",children:"1. Create Next.js APP"}),"\n",(0,s.jsxs)(t.p,{children:["Follow ",(0,s.jsx)(t.a,{href:"https://nextjs.org/docs/getting-started/installation",children:"this instruction"})," to install Next.js. Use TypeScript, App Router and ",(0,s.jsx)(t.code,{children:"src/"})," directory. If you're using ",(0,s.jsx)(t.strong,{children:"create-next-app"}),' answer to all questions "Yes".']}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://github.com/finom/vovk/assets/1082083/b9e600da-a43a-4e30-a089-43e5e4b147ef",alt:""})}),"\n",(0,s.jsx)(t.h3,{id:"2-enable-decorators",children:"2. Enable decorators"}),"\n",(0,s.jsxs)(t.p,{children:["In your ",(0,s.jsx)(t.strong,{children:"tsconfig.json"})," set ",(0,s.jsx)(t.code,{children:'"experimentalDecorators"'})," to ",(0,s.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n    "compilerOptions": {\n        "experimentalDecorators": true,\n        // ...\n    }\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"3-set-up-nextjs-wildcard-route-handler",children:"3. Set up Next.js wildcard route handler"}),"\n",(0,s.jsxs)(t.p,{children:["Create file ",(0,s.jsx)(t.strong,{children:"/src/app/[[...]]/route.ts"})," where ",(0,s.jsx)(t.strong,{children:"[[...]]"})," is a real folder name. This is the core entry point for all Vovk.ts routes."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"// /src/app/[[...]]/route.ts\nimport { activateControllers } from 'vovk';\n\nconst controllers = [];\n\nexport const { GET, POST, PUT, DELETE } = activateControllers(controllers, {\n  async onMetadata(metadata, write) {\n    if (process.env.NODE_ENV === 'development') {\n      const [fs, path] = await Promise.all([import('fs/promises'), import('path')]);\n      const metadataPath = path.join(\n        __dirname.replace('.next/server/app', 'src/vovk'),\n        '../../vovk-metadata.json'\n      );\n\n      await write(metadataPath, metadata, { fs, path });\n    }\n  },\n});\n"})}),"\n",(0,s.jsxs)(t.p,{children:["For now the ",(0,s.jsx)(t.code,{children:"controllers"})," array is empty. Notice the ",(0,s.jsx)(t.code,{children:"onMetadata"})," option. It's called whenever the Next.js route is initialised. The function provides two arguments: ",(0,s.jsx)(t.code,{children:"metadata"})," - the metadata of controllers and workers, and ",(0,s.jsx)(t.code,{children:"write"})," - a function created to shorten the code that checks if metadata is changed and updates the metadata file. LEt's break down ",(0,s.jsx)(t.code,{children:"onMetadata"})," option contents."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"process.env.NODE_ENV === 'development'"})," checks if mode is development. In other words, the code isn't called in production."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"const [fs, path] = await Promise.all([import('fs/promises'), import('path')]);"})," imports required Node.js modules. Next.js doesn't throw compilation error because of ",(0,s.jsx)(t.code,{children:"NODE_ENV"})," check."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"const metadataPath = path.join(...)"})," builds path to the metadata file. ",(0,s.jsx)(t.code,{children:'".next/server/app"'})," is the folder path where Next.js compiles files. At this case ",(0,s.jsx)(t.code,{children:"metadataPath"})," is ",(0,s.jsx)(t.strong,{children:"/src/vovk/vovk-metadata.json"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"await write(metadataPath, metadata, { fs, path });"})," writes metadata file. It accepts 3 arguments: the path to metadata, metadata object and Node.js libraries (",(0,s.jsx)(t.code,{children:"'fs/promises'"})," and ",(0,s.jsx)(t.code,{children:"'path'"}),"). The last one makes internal Vovk.ts code to not import these modules by itself and prevents compilation errors."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"4-create-first-service-and-controller",children:"4. Create first service and controller"}),"\n",(0,s.jsxs)(t.p,{children:["Create two files ",(0,s.jsx)(t.code,{children:"HelloService.ts"})," and ",(0,s.jsx)(t.code,{children:"HelloController.ts"})," at ",(0,s.jsx)(t.strong,{children:"/src/vovk/hello/"}),". The first one is a back-end service that should perform DB calls or invoke third-party APIs, the second one is a controller that handles incoming HTTP requests and calls service methods."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"// /src/vovk/hello/HelloService.ts\nexport default class HelloService {\n  static async getHello() {\n    return { greeting: 'Hello world!' };\n  }\n}\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"// /src/vovk/hello/HelloController.ts\nimport { get, prefix } from \"vovk\";\nimport HelloService from \"./HelloService\"\n\n@prefix('hello')\nexport default class HelloController {\n    static controllerName = 'HelloController';\n    \n    private static helloService = HelloService;\n\n    /**\n     * Return a greeting from the HelloService\n     */\n    @get('greeting')\n    static async getHello() {\n        return this.helloService.getHello();\n    }\n}\n"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"@prefix"})," and ",(0,s.jsx)(t.code,{children:"@get"})," build API endpoint ",(0,s.jsx)(t.code,{children:"/api/hello/greeting"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"controllerName"})," is required to build ",(0,s.jsx)(t.strong,{children:"vovk-metadata.json"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"HelloService"})," is assigned as a ",(0,s.jsx)(t.code,{children:"private static"})," and called at the route handler ",(0,s.jsx)(t.code,{children:"getHello"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"5-set-up-application-state-and-clientize-the-controller",children:"5. Set up application state and clientize the controller"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Vovk.ts"})," archirecture assumes that a developer is going to be free to choose any app state management library (Redux/Toolkit, Mobx, Recoil, custom context, etc). To follow the common coding style with static classes you can use ",(0,s.jsx)(t.a,{href:"https://github.com/finom/use-0",children:"use-0"})," app state library."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'// /src/vovk/hello/HelloState.ts\nimport { clientizeController } from "vovk/client";\nimport { getUse } from "use-0";\nimport type HelloWorkerService from "./HelloWorkerService";\nimport type HelloController from "./HelloController";\nimport metadata from \'../vovk-metadata.json\' assert { type: "json" };\n\nexport default class HelloState {\n    private static controller = clientizeController<typeof HelloController>(metadata.HelloController);\n\n    static use = getUse<typeof HelloState>();\n\n    static count = 0;\n\n    static getHello() {\n        return this.controller.getHello();\n    }\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"6-make-the-first-request-from-pagetsx",children:"6. Make the first request from page.tsx"}),"\n",(0,s.jsxs)(t.p,{children:["Call ",(0,s.jsx)(t.code,{children:"HelloState.getHello()"})," inside the ",(0,s.jsx)(t.code,{children:"useEffect"})," hook to make tha HTTP request to receive data from the Back-end Service. The example also demonstrates how you could use ",(0,s.jsx)(t.a,{href:"https://github.com/finom/use-0",children:"use-0"})," to re-render components when property accessor is called and the value is re-defined."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"// /src/app/page.tsx\n\"use client\";\nimport Image from 'next/image';\nimport HelloState from '../vovk/hello/HelloState';\nimport { useEffect, useState } from 'react';\n\nexport default function Home() {\n  const count = HelloState.use('count');\n  const [serverResponse, setServerResponse] = useState<{ greeting: string } | null>(null);\n\n  useEffect(() => {\n    HelloState.getHello().then(setServerResponse);\n  }, []);\n\n  return (\n    <div>\n        <div onClick={() => HelloState.count++}>Clicks: {count}</div>\n        <div className=\"w-1/2 font-bold\">{serverResponse?.greeting ?? 'Loading...'}</div>\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,s.jsx)(t.p,{children:"///////"})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>l});var s=n(7294);const r={},o=s.createContext(r);function l(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);