"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4131],{9408:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(5893),o=n(1151);const s={sidebar_position:2},a="Custom Decorators",i={id:"decorators",title:"Custom Decorators",description:"Overview",source:"@site/docs/decorators.md",sourceDirName:".",slug:"/decorators",permalink:"/docs/decorators",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/decorators.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Client",permalink:"/docs/client"},next:{title:"Request validation",permalink:"/docs/validation"}},d={},c=[{value:"Overview",id:"overview",level:2},{value:"<code>authGuard</code> example",id:"authguard-example",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"custom-decorators",children:"Custom Decorators"}),"\n",(0,r.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"createDecorator"})," is a higher-order function that produces a decorator factory (a function that returns a decorator). It accepts a middleware function with the following parameters:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"request"}),", which extends ",(0,r.jsx)(t.code,{children:"VovkRequest"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"next"}),", a function that should be invoked and its result returned to call subsequent decorators or the route handler."]}),"\n",(0,r.jsx)(t.li,{children:"Additional arguments are passed through to the decorator factory."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Second argument is an optional init handler. It's called every time when decorator is initialised and it's used to populate ",(0,r.jsx)(t.strong,{children:"vovk-metadata.json"})," with information on client-side validation. For more info please check the ",(0,r.jsx)(t.a,{href:"validation",children:"Validation"})," page."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { createDecorator, get, HttpException, HttpStatus } from 'vovk';\n\nconst myDecorator = createDecorator((req, next, a: string, b: number) => {\n  console.log(a, b); // Outputs: \"foo\", 1\n\n  if(isSomething) { \n    // override route method behavior and return { hello: 'world' } from the endpoint\n    return { hello: 'world' };\n  }\n\n  if(isSomethingElse) {\n    // throw HTTP error if needed\n    throw new HttpException(HttpStatus.BAD_REQUEST, 'Something went wrong');\n  }\n\n  return next();\n}, (a: string, b: number) => {\n    console.info('Decorator is initialised with', a, b);\n});\n\nclass MyController {\n  static controllerName = 'MyController';\n  @get.auto()\n  @myDecorator('foo', 1) // Passes 'foo' as 'a', and 1 as 'b'\n  static getSomething() {\n    // ...\n  }\n}\n"})}),"\n",(0,r.jsxs)(t.h2,{id:"authguard-example",children:[(0,r.jsx)(t.code,{children:"authGuard"})," example"]}),"\n",(0,r.jsxs)(t.p,{children:["There is the example code that defines ",(0,r.jsx)(t.code,{children:"authGuard"})," decorator that does two things:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Checks if a user is authorised and returns an Unauthorised status if not."}),"\n",(0,r.jsxs)(t.li,{children:["Adds ",(0,r.jsx)(t.code,{children:"currentUser"})," to the request object."]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["To extend ",(0,r.jsx)(t.code,{children:"req"})," object you can define your custom interface that extends ",(0,r.jsx)(t.code,{children:"VovkRequest"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"// /src/types.ts\nimport type { VovkRequest } from 'vovk'\nimport { type User } from '@prisma/client';\n\nexport interface GuardedRequest<BODY = undefined, QUERY extends Record<string, string> | undefined = undefined>\n  extends VovkRequest<BODY, QUERY> {\n  currentUser: User;\n}\n\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Then define the ",(0,r.jsx)(t.code,{children:"authGuard"})," decorator itself."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"// /src/decorators/authGuard.ts\nimport { HttpException, HttpStatus, createDecorator } from 'vovk';\nimport type { GuardedRequest } from '../types';\n\nconst authGuard = createDecorator(async (req: GuardedRequest, next) => {\n  // ... define userId and isAuthorised\n  // parse access token for example\n\n  if (!isAuthorised) {\n    throw new HttpException(HttpStatus.UNAUTHORIZED, 'Unauthorized');\n  }\n\n  // let's imagine you use Prisma and you want to find a user by userId\n  const currentUser = await prisma.user.findUnique({ where: { id: userId } });\n\n  req.currentUser = currentUser;\n\n  return next();\n});\n\nexport default authGuard;\n"})}),"\n",(0,r.jsx)(t.p,{children:"And finally use the decorator as we did above:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"// ...\nexport default class UserController {\n  // ...\n  @get('current-user')\n  @authGuard()\n  static async getCurrentUser(req: GuardedRequest) {\n    return req.currentUser;\n  }\n\n  // ...\n}\n"})})]})}function l(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>a});var r=n(7294);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);