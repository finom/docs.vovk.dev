"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4497],{6979:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var o=t(5893),s=t(1151);const i={sidebar_position:7},r="Customization",c={id:"customization",title:"Customization",description:"vovk.config.js",source:"@site/docs/customization.md",sourceDirName:".",slug:"/customization",permalink:"/docs/customization",draft:!1,unlisted:!1,editUrl:"https://github.com/finom/vovk/tree/main/docs/docs/customization.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"CLI",permalink:"/docs/cli"},next:{title:"How it Works",permalink:"/docs/how-it-works"}},d={},a=[{value:"vovk.config.js",id:"vovkconfigjs",level:2},{value:"Customize fetcher and default options",id:"customize-fetcher-and-default-options",level:2},{value:"Customize client validation library",id:"customize-client-validation-library",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"customization",children:"Customization"}),"\n",(0,o.jsx)(n.h2,{id:"vovkconfigjs",children:"vovk.config.js"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"/** @type {import('vovk').VovkConfig} */\nconst vovkConfig = {\n    clientOut: './node_modules/.vovk',\n    route: './src/app/api/[[...vovk]]/route.ts',\n    fetcher: 'vovk/client/defaultFetcher',\n    prefix: '/api',\n    validateOnClient: '',\n};\n\nmodule.exports = vovkConfig;\n"})}),"\n",(0,o.jsx)(n.h2,{id:"customize-fetcher-and-default-options",children:"Customize fetcher and default options"}),"\n",(0,o.jsx)(n.p,{children:"You can redefine the default fetching function with its option completely to tightly integrate with your application state or to add extra features. For example, the clientized controller methods may look like that:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import { UserController } from 'vovk-client';\n\n// ...\n\nUserController.createUser({ \n    body,\n    query,\n    successToast: 'Successfully created a new user',\n    useAuth: true,\n    sentryLogErrors: true,\n});\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The fetcher is defined as a default export that extends ",(0,o.jsx)(n.code,{children:"VovkClientFetcher"})," type and should be listed either as config option:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"/** @type {import('vovk').VovkConfig} */\nconst vovkConfig = {\n    fetcher: './src/lib/myFetchingFunction',\n};\n\nmodule.exports = vovkConfig;\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Or as ",(0,o.jsx)(n.code,{children:"VOVK_FETCHER"})," env variable:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'VOVK_FETCHER="./src/lib/myFetchingFunction" vovk dev\n'})}),"\n",(0,o.jsxs)(n.p,{children:["By default Vovk.ts uses fetcher defined at ",(0,o.jsx)(n.code,{children:"vovk/client/defaultFetcher"})," and you can check its source code ",(0,o.jsx)(n.a,{href:"https://github.com/finom/vovk/blob/main/src/client/defaultFetcher.ts",children:"here"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"The fetcher accepts two arguments:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["An object that is provided by internal Vovk.ts code that includes HTTP method information and utilities:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"httpMethod"})," - the HTTP metod;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"getEndpoint"})," - an utility that builds request endpoiint from ",(0,o.jsx)(n.code,{children:"prefix"}),", ",(0,o.jsx)(n.code,{children:"query"})," and ",(0,o.jsx)(n.code,{children:"params"}),";"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"validate"})," - a function that validates ",(0,o.jsx)(n.code,{children:"body"})," and ",(0,o.jsx)(n.code,{children:"query"})," of the request;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"defaultHandler"})," - handles the ",(0,o.jsx)(n.code,{children:"Response"})," object returned from ",(0,o.jsx)(n.code,{children:"fetch"})," function;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"defaultStreamHandler"})," - handles the ",(0,o.jsx)(n.code,{children:"Response"})," object returned from ",(0,o.jsx)(n.code,{children:"fetch"})," function in case of stream."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Request arguments:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"params"})," - the patams such as ",(0,o.jsx)(n.code,{children:"id"})," from ",(0,o.jsx)(n.code,{children:"users/:id"}),";"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"query"})," - the search query properties such as ",(0,o.jsx)(n.code,{children:"?foo=bar"}),";"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"body"})," - the request body;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"prefix"})," - what's defined as ",(0,o.jsx)(n.code,{children:"prefix"})," property at ",(0,o.jsx)(n.strong,{children:"vovk.config.js"})," or passed directly to the client method;"]}),"\n",(0,o.jsxs)(n.li,{children:["The rest options - your custom options and ",(0,o.jsx)(n.code,{children:"RequestInit"})," that includes the rest ",(0,o.jsx)(n.code,{children:"fetch"})," options such as ",(0,o.jsx)(n.code,{children:"headers"}),", ",(0,o.jsx)(n.code,{children:"credentials"})," etc."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Your custom fetcher with custom option ",(0,o.jsx)(n.code,{children:"myCustomOption"})," that is just alerted may look like that:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import type { VovkDefaultFetcherOptions, VovkClientFetcher } from 'vovk';\n\n// in order to keep default features such as disableClientValidation, headers etc,\n// it's recommended to extend custom options from VovkDefaultFetcherOptions\ninterface MyOptions extends VovkDefaultFetcherOptions {\n    successMessage: string;\n}\n\nconst myCustomFetcher: VovkClientFetcher<MyOptions> = async (\n  { httpMethod, getEndpoint, validate, defaultHandler, defaultStreamHandler },\n  { params, query, body, prefix = '/api', myCustomOption, ...options }\n) => {\n  // 1. Build the endpoint\n  const endpoint = getEndpoint({ prefix, params, query });\n\n  // 2. Validate\n  if (!options.disableClientValidation) {\n    await validate({ body, query });\n  }\n\n  // 3. Make fetch request (here you can add authorisation headers)\n  const response = await fetch(endpoint, {\n    method: httpMethod,\n    body: JSON.stringify(body),\n    ...options,\n  });\n\n  // 4. Utilise your custom option somehow\n  alert(successMessage);\n\n  // 5. Handle response based on response headers\n  if (response.headers.get('content-type')?.includes('application/json')) {\n    return defaultHandler(response);\n  }\n\n  if (response.headers.get('content-type')?.includes('text/event-stream')) {\n    return defaultStreamHandler(response);\n  }\n\n  return response;\n};\n\nexport default myCustomFetcher;\n"})}),"\n",(0,o.jsx)(n.h2,{id:"customize-client-validation-library",children:"Customize client validation library"}),"\n",(0,o.jsx)(n.p,{children:"Soon..."})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var o=t(7294);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);